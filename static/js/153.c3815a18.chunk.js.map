{"version":3,"file":"static/js/153.c3815a18.chunk.js","mappings":"2KAEO,MAAMA,GAAoBC,E,QAAAA,IAAO,MAAPA,CAAH,geAYbC,GAAOA,EAAEC,KAAO,UAAY,WAC/BD,GAAOA,EAAEC,KAAO,IAAM,MCf7B,SAASC,EAASC,GACvB,OAAe,OAARA,QAAwBC,IAARD,GAAqBA,IAAQA,EAAIE,MACzD,C,cCGD,MAqCA,EArCoB,KAClB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAEvCC,EAAkBC,IACtB,MAAMC,EDLe,EACvBC,EACAC,KAEA,GAAsB,qBAAXR,OACT,OAAO,EAET,MAAMS,EAASD,EAAM,YAAc,aACnC,IAAIE,EAAS,EAQmD,IAAD,EAI/D,OAXIb,EAASU,GACXG,EAAUH,EAAkBC,EAAM,cAAgB,eACzCD,aAAkBI,SAC3BD,EAASH,EAAOK,gBAAgBH,GACvBF,IACTG,EAAUH,EAAuBE,IAE/BF,IAAWV,EAASU,IAA6B,kBAAXG,IACxCA,EAAM,WAAKH,EAAuBM,eAAkBN,GACjDK,uBADG,aAAG,EACYH,IAEhBC,CAAP,ECfwBI,CAAUT,EAAME,QAAQ,IAEzCN,GAAcK,EAAgB,IACjCJ,GAAc,GACLI,GAAiB,KAC1BJ,GAAc,EACf,GAGHa,EAAAA,EAAAA,YAAU,KACRf,OAAOgB,iBAAiB,SAAUZ,GAC3B,KACLJ,OAAOiB,oBAAoB,SAAUb,EAArC,IAGD,IAWH,OACE,SAACX,EAAD,CAAmByB,QAVJ,KACCC,SAASC,eAAe,SAChCC,eAAe,CACrBC,SAAU,SACVC,MAAO,MACPC,OAAQ,WAHV,EAQsC5B,KAAMK,EAA5C,UACE,SAACwB,EAAA,EAAD,CAASC,IAAI,iBAAiBC,MAAM,OAAOC,OAAO,UAFtD,C","sources":["common/ScrollToTop/styles.ts","common/utils/getWindow.ts","common/ScrollToTop/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ScrollUpContainer = styled(\"div\")<any>`\n  padding: 10px;\n  position: fixed;\n  right: 30px;\n  bottom: 30px;\n  z-index: 10;\n  cursor: pointer;\n  background: rgb(241, 242, 243);\n  text-align: center;\n  align-items: center;\n  border-radius: 4px;\n  transition: all 0.3s ease-in-out;\n  visibility: ${(p) => (p.show ? \"visible\" : \"hidden\")};\n  opacity: ${(p) => (p.show ? \"1\" : \"0\")};\n  display: flex;\n\n  &:hover,\n  &:active,\n  &:focus {\n    background: rgb(224, 224, 224);\n  }\n\n  @media screen and (max-width: 1240px) {\n    display: none;\n  }\n`;\n","export function isWindow(obj: any) {\n  return obj !== null && obj !== undefined && obj === obj.window;\n}\n\nexport const getScroll = (\n  target: HTMLElement | Window | Document | null,\n  top: boolean\n): number => {\n  if (typeof window === \"undefined\") {\n    return 0;\n  }\n  const method = top ? \"scrollTop\" : \"scrollLeft\";\n  let result = 0;\n  if (isWindow(target)) {\n    result = (target as Window)[top ? \"pageYOffset\" : \"pageXOffset\"];\n  } else if (target instanceof Document) {\n    result = target.documentElement[method];\n  } else if (target) {\n    result = (target as HTMLElement)[method];\n  }\n  if (target && !isWindow(target) && typeof result !== \"number\") {\n    result = ((target as HTMLElement).ownerDocument || (target as Document))\n      .documentElement?.[method];\n  }\n  return result;\n};\n","import { useEffect, useState } from \"react\";\nimport { SvgIcon } from \"../SvgIcon\";\nimport { ScrollUpContainer } from \"./styles\";\nimport { getScroll } from \"../utils/getWindow\";\n\nconst ScrollToTop = () => {\n  const [showScroll, setShowScroll] = useState(false);\n\n  const checkScrollTop = (event: any) => {\n    const offsetFromTop = getScroll(event.target, true);\n\n    if (!showScroll && offsetFromTop > 350) {\n      setShowScroll(true);\n    } else if (offsetFromTop <= 350) {\n      setShowScroll(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", checkScrollTop);\n    return () => {\n      window.removeEventListener(\"scroll\", checkScrollTop);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const scrollUp = () => {\n    const element = document.getElementById(\"intro\") as HTMLDivElement;\n    element.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\",\n      inline: \"nearest\",\n    });\n  };\n\n  return (\n    <ScrollUpContainer onClick={scrollUp} show={showScroll}>\n      <SvgIcon src=\"scroll-top.svg\" width=\"20px\" height=\"20px\" />\n    </ScrollUpContainer>\n  );\n};\n\nexport default ScrollToTop;\n"],"names":["ScrollUpContainer","styled","p","show","isWindow","obj","undefined","window","showScroll","setShowScroll","useState","checkScrollTop","event","offsetFromTop","target","top","method","result","Document","documentElement","ownerDocument","getScroll","useEffect","addEventListener","removeEventListener","onClick","document","getElementById","scrollIntoView","behavior","block","inline","SvgIcon","src","width","height"],"sourceRoot":""}